(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["ReduxReplicate"] = factory();
	else
		root["ReduxReplicate"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports['default'] = replicate;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _selectKeys = __webpack_require__(1);

	var _selectKeys2 = _interopRequireDefault(_selectKeys);

	var _mergeStoresStates = __webpack_require__(2);

	var _mergeStoresStates2 = _interopRequireDefault(_mergeStoresStates);

	exports.selectKeys = _selectKeys2['default'];
	exports.mergeStoresStates = _mergeStoresStates2['default'];

	/**
	 * Store enhancer designed to replicate stores' states before/after reductions.
	 *
	 * @param {Mixed} storeKey
	 * @param {Object|Array} replicatorCreator(s)
	 * @return {Function}
	 * @api public
	 */

	function replicate(storeKey, replicatorCreators) {
	  if (!Array.isArray(replicatorCreators)) {
	    replicatorCreators = [replicatorCreators];
	  }

	  return function (next) {
	    return function (reducer, initialState, enhancer) {
	      var nextState = null;
	      var replaceState = false;
	      var mergeNextState = function mergeNextState(state) {
	        if (!replaceState && state && typeof state === 'object' && nextState && typeof nextState === 'object' && !Array.isArray(state) && !Array.isArray(nextState)) {
	          state = _extends({}, state, nextState);
	        } else {
	          state = nextState;
	        }

	        replaceState = false;
	        nextState = null;
	        return state;
	      };

	      var replicators = replicatorCreators.map(function (replicator) {
	        return replicator();
	      });
	      var replicatedReducer = function replicatedReducer(state, action) {
	        for (var _iterator = replicators, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
	          var _ref;

	          if (_isArray) {
	            if (_i >= _iterator.length) break;
	            _ref = _iterator[_i++];
	          } else {
	            _i = _iterator.next();
	            if (_i.done) break;
	            _ref = _i.value;
	          }

	          var replicator = _ref;

	          if (replicator.ready && replicator.preReduction) {
	            replicator.preReduction(storeKey, _selectKeys2['default'](replicator.keys, state), action);
	          }
	        }

	        if (nextState) {
	          state = mergeNextState(state);
	        }
	        state = reducer(state, action);

	        for (var _iterator2 = replicators, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
	          var _ref2;

	          if (_isArray2) {
	            if (_i2 >= _iterator2.length) break;
	            _ref2 = _iterator2[_i2++];
	          } else {
	            _i2 = _iterator2.next();
	            if (_i2.done) break;
	            _ref2 = _i2.value;
	          }

	          var replicator = _ref2;

	          if (replicator.ready && replicator.postReduction) {
	            replicator.postReduction(storeKey, _selectKeys2['default'](replicator.keys, state), action);
	          }
	        }

	        return state;
	      };

	      var store = next(replicatedReducer, initialState, enhancer);
	      var initReplicators = function initReplicators() {
	        var _loop = function () {
	          if (_isArray3) {
	            if (_i3 >= _iterator3.length) return 'break';
	            _ref3 = _iterator3[_i3++];
	          } else {
	            _i3 = _iterator3.next();
	            if (_i3.done) return 'break';
	            _ref3 = _i3.value;
	          }

	          var replicator = _ref3;

	          if (replicator.init) {
	            replicator.ready = false;
	            replicator.init(storeKey, store, function (ready) {
	              return replicator.ready = ready;
	            });
	          } else {
	            replicator.ready = true;
	          }
	        };

	        for (var _iterator3 = replicators, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
	          var _ref3;

	          var _ret = _loop();

	          if (_ret === 'break') break;
	        }
	      };

	      store.setKey = function (key) {
	        if (key !== storeKey) {
	          storeKey = key;
	          replaceState = true;
	          initReplicators();
	        }
	      };

	      store.setState = function (state) {
	        nextState = state;
	        store.replaceReducer(replicatedReducer);
	      };

	      initReplicators();

	      return store;
	    };
	  };
	}

/***/ },
/* 1 */
/***/ function(module, exports) {

	/**
	 * Extracts keys from some object.  See inline comments below for exact usage.
	 *
	 * @param {Object} keys
	 * @param {Object} object
	 * @param {Function} handler Optional
	 * @return {Function} pass the `stores` to this returned function
	 * @api public
	 */
	'use strict';

	exports.__esModule = true;
	var selectKeys = function selectKeys(keys, object) {
	  var handler = arguments.length <= 2 || arguments[2] === undefined ? function () {} : arguments[2];

	  if (!keys) {
	    for (var key in object) {
	      if (typeof object[key] !== 'undefined') {
	        handler(key, object[key]);
	      }
	    }

	    return object;
	  }

	  var selected = {};
	  var keysArray = Object.keys(keys);
	  var firstKey = keysArray[0];

	  if (!firstKey) {
	    // empty object implies no keys are extracted
	    return selected;
	  }

	  if (keys[firstKey]) {
	    // when truthy, extract each key
	    for (var key in keys) {
	      if (typeof object[key] !== 'undefined') {
	        selected[key] = object[key];
	        handler(key, object[key]);
	      }
	    }
	  } else {
	    // when falsy, extract other keys
	    for (var key in object) {
	      if (typeof keys[key] === 'undefined') {
	        selected[key] = object[key];
	        handler(key, object[key]);
	      }
	    }
	  }

	  return selected;
	};

	exports['default'] = selectKeys;
	module.exports = exports['default'];

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _selectKeys = __webpack_require__(1);

	var _selectKeys2 = _interopRequireDefault(_selectKeys);

	/**
	 * Small utility to help with easily merging the states of multiple stores into
	 * a single object.
	 *
	 * @param {Object} keys
	 * @return {Function} pass the `stores` to this returned function
	 * @api public
	 */
	var mergeStoresStates = function mergeStoresStates(keys) {
	  return function (stores) {
	    var merged = {};

	    for (var _name in stores) {
	      Object.assign(merged, _selectKeys2['default'](keys, stores[_name].getState()));
	    }

	    return merged;
	  };
	};

	exports['default'] = mergeStoresStates;
	module.exports = exports['default'];

/***/ }
/******/ ])
});
;